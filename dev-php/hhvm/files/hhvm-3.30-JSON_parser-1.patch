From d30e67c19eea351ee78ced5fb19802cbcdcdd3ce Mon Sep 17 00:00:00 2001
From: Mark Williams <mwilliams@fb.com>
Date: Tue, 28 Jan 2020 15:04:11 -0800
Subject: [PATCH] Fix a json_decode crash when depth==0

Summary:
Setting depth=0 is an error, and should result in NULL, but we weren't
checking for it, so in the case of a single, top-level string, we
would reading the -1th element of the stack.

Reviewed By: oulgen

Differential Revision: D19609959
---
 hphp/runtime/ext/json/JSON_parser.cpp           | 5 +++++
 hphp/test/slow/ext_json/decode_crash.php        | 3 +++
 hphp/test/slow/ext_json/decode_crash.php.expect | 1 +
 3 files changed, 9 insertions(+)
 create mode 100644 hphp/test/slow/ext_json/decode_crash.php
 create mode 100644 hphp/test/slow/ext_json/decode_crash.php.expect

diff --git a/hphp/runtime/ext/json/JSON_parser.cpp b/hphp/runtime/ext/json/JSON_parser.cpp
index 5466438b011..e0c336232f5 100644
--- a/hphp/runtime/ext/json/JSON_parser.cpp
+++ b/hphp/runtime/ext/json/JSON_parser.cpp
@@ -1104,6 +1104,11 @@ bool JSON_parser(Variant &z, const char *p, int length, bool const assoc,
   // is explicitly flushed (e.g., due to being idle).
   json->initSb(length);
 
+  if (depth <= 0) {
+    json->error_code = json_error_codes::JSON_ERROR_DEPTH;
+    return false;
+  }
+
   // SimpleParser only handles the most common set of options. Also, only use it
   // if its array nesting depth check is *more* restrictive than what the user
   // asks for, to ensure that the precise semantics of the general case is
diff --git a/hphp/test/slow/ext_json/decode_crash.php b/hphp/test/slow/ext_json/decode_crash.php
new file mode 100644
index 00000000000..9944145e454
--- /dev/null
+++ b/hphp/test/slow/ext_json/decode_crash.php
@@ -0,0 +1,3 @@
+<?hh
+
+var_dump(json_decode('"a"', false, 0, 0));
diff --git a/hphp/test/slow/ext_json/decode_crash.php.expect b/hphp/test/slow/ext_json/decode_crash.php.expect
new file mode 100644
index 00000000000..7951defec19
--- /dev/null
+++ b/hphp/test/slow/ext_json/decode_crash.php.expect
@@ -0,0 +1 @@
+NULL
