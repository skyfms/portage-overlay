From ffadb1f71745289497ca4a786a368d0a1edd18b7 Mon Sep 17 00:00:00 2001
From: Tim Starling <tstarling@wikimedia.org>
Date: Wed, 26 Nov 2014 11:09:32 +1100
Subject: [PATCH 1/2] Don't install bundled PCRE

Don't install the bundled libpcre, since it is harmful and unnecessary
for the same reasons as installation of libzip, which I removed in pull
request #16.

Don't compile the bundled PCRE or libzip if they are not going to
be used. HPHPSetup has been included at the relevant time, so we
already have this information. If the bundled libraries are not used, we
don't want to install header files for them, since this will could cause
errors in DSO extensions if the system has a different library version.
Plus, it helps the build go faster if you don't compile unnecessary
things.
---
 CMakeLists.txt      | 14 +++++++++++---
 pcre/CMakeLists.txt | 32 --------------------------------
 2 files changed, 11 insertions(+), 35 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 71a9326..9b5df6a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,7 +24,6 @@ set(THIRD_PARTY_MODULES)
 set(THIRD_PARTY_HEADERS)
 
 list(APPEND THIRD_PARTY_MODULES
-  pcre
   fastlz
   libafdt
   libmbfl
@@ -32,13 +31,22 @@ list(APPEND THIRD_PARTY_MODULES
   timelib
   lz4
   double-conversion
-  folly
-  libzip)
+  folly)
 if(ENABLE_FASTCGI)
   list(APPEND THIRD_PARTY_MODULES proxygen)
   list(APPEND THIRD_PARTY_MODULES thrift)
 endif()
 
+# Add bundled PCRE if the system one will not be used
+if (NOT PCRE_LIBRARY)
+  list(APPEND THIRD_PARTY_MODULES pcre)
+endif()
+
+# Add bundled libzip if the system one will not be used
+if (NOT LIBZIP_LIBRARY)
+  list(APPEND THIRD_PARTY_MODULES libzip)
+endif()
+
 function(TP_INSTALL_HEADERS TARGET SRCDIR DEST)
   file(GLOB_RECURSE files "${SRCDIR}/*.h")
   install(
diff --git a/pcre/CMakeLists.txt b/pcre/CMakeLists.txt
index 17d50b7..6728f36 100644
--- a/pcre/CMakeLists.txt
+++ b/pcre/CMakeLists.txt
@@ -846,37 +846,6 @@ echo RunTest.bat tests successfully completed
 
 ENDIF(PCRE_BUILD_TESTS)
 
-# Installation
-SET(CMAKE_INSTALL_ALWAYS 1)
-
-INSTALL(TARGETS ${targets}
-        RUNTIME DESTINATION bin
-        LIBRARY DESTINATION lib
-        ARCHIVE DESTINATION lib)
-
-INSTALL(FILES ${PCRE_HEADERS} ${PCREPOSIX_HEADERS} DESTINATION include)
-
-FILE(GLOB html ${PROJECT_SOURCE_DIR}/doc/html/*.html)
-FILE(GLOB man1 ${PROJECT_SOURCE_DIR}/doc/*.1)
-FILE(GLOB man3 ${PROJECT_SOURCE_DIR}/doc/*.3)
-
-IF(PCRE_BUILD_PCRECPP)
-        INSTALL(FILES ${PCRECPP_HEADERS} DESTINATION include)
-ELSE(PCRE_BUILD_PCRECPP)
-        # Remove pcrecpp.3
-        FOREACH(man ${man3})
-                GET_FILENAME_COMPONENT(man_tmp ${man} NAME)
-                IF(NOT man_tmp STREQUAL "pcrecpp.3")
-                        SET(man3_new ${man3} ${man})
-                ENDIF(NOT man_tmp STREQUAL "pcrecpp.3")
-        ENDFOREACH(man ${man3})
-        SET(man3 ${man3_new})
-ENDIF(PCRE_BUILD_PCRECPP)
-
-INSTALL(FILES ${man1} DESTINATION man/man1)
-INSTALL(FILES ${man3} DESTINATION man/man3)
-INSTALL(FILES ${html} DESTINATION share/doc/pcre/html)
-
 # help, only for nice output
 IF(BUILD_SHARED_LIBS)
   SET(BUILD_STATIC_LIBS OFF)
@@ -896,7 +865,6 @@ IF(PCRE_SHOW_REPORT)
   MESSAGE(STATUS "")
   MESSAGE(STATUS "PCRE configuration summary:")
   MESSAGE(STATUS "")
-  MESSAGE(STATUS "  Install prefix .................. : ${CMAKE_INSTALL_PREFIX}")
   MESSAGE(STATUS "  C compiler ...................... : ${CMAKE_C_COMPILER}")
   MESSAGE(STATUS "  C++ compiler .................... : ${CMAKE_CXX_COMPILER}")
   MESSAGE(STATUS "  C compiler flags ................ : ${CMAKE_C_FLAGS}${cfsp}${CMAKE_C_FLAGS_${buildtype}}")
